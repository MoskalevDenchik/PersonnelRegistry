@model DM.PR.WEB.Models.DepartmentCreateViewModel



@{
    ViewBag.Title = "Create";
    int phoneCount = 0;
}

<h2 class="text-center">Добавьте новый отдел</h2> <br />



@using (Html.BeginForm())
{
    <div class="form-horizontal">

        <div class="form-group">
            @Html.LabelFor(model => model.ParentId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Action("SelectList")
                @Html.ValidationMessageFor(model => model.ParentId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Телефоны", new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="Phones">
                @{
                    if (Model.Phones != null) { Html.RenderAction("AddPhone", new { phones = @phoneCount++ }); }
                }
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2">
                @Ajax.ActionLink("Добавить Телефон", "AddPhone", new { phones = @phoneCount++ },
                                new AjaxOptions { UpdateTargetId = "Phones", InsertionMode = InsertionMode.InsertAfter },
                                new { @class = "btn btn-default" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
